version: "3.9"

services:
  web:
    build: ./app
    ports:
      - "${WEB_PORT}:5000"
    networks:
      - backend
    depends_on:
      - redis
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_PORT: ${REDIS_PORT}
    mem_limit: 512m
    cpus: 0.5

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    mem_limit: 256m
    cpus: 0.25

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    mem_limit: 512m
    cpus: 0.5

networks:
  backend:
    driver: bridge

volumes:
  redis_data:
  postgres_data:
